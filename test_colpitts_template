using Serialization
using Random

Random.seed!(1234)

include("models.jl")
include("integrators.jl")
include("run_ens_forecast.jl")
using .Models
using .Integrators
using .run_ens_forecast

M = 30
D = 6
k = 40
k_r = 20

window_id = {window_id}
windows = [13, 26, 39, 52, 64, 77, 90, 103, 116, 129, 142, 154, 167, 180, 193, 206, 219, 232, 245, 258]
idx = [1, 1, 3, 5, 10, 10, 10, 10, 8, 2, 4, 1, 4, 7, 10, 10, 10, 8, 5, 10]
inflations = 1:0.05:1.45

inflation = inflations[idx[window_id]]
window = windows[window_id]

osc_vars = 1:D
modes = 2:3
model = Models.colpitts_true
model_err = Models.colpitts_err
integrator = Integrators.rk4
outfreq = 4
Δt = 0.1
m = 20
cycles = 10000
record_length = {record_length}
ens_err_pct = {ens_err_pct}
obs_err_pct = 0.1
transient = 3000
brownian_noise = false
mp = 5
y0 = rand(D)
varimax = false
da = {da}
check_bounds = false

if !da
    info, ssa_info = run_ens_forecast.ens_forecast_compare(model=model, model_err=model_err,
                                                  M=M, D=D, k=k, k_r=k_r, modes=modes,
                                                  osc_vars=osc_vars,
                                                  integrator=integrator,
                                                  outfreq=outfreq, Δt=Δt,
                                                  m=m, cycles=1000, window=window,
                                                  record_length=record_length,
                                                  ens_err_pct=ens_err_pct, obs_err_pct=obs_err_pct,
                                                  transient=transient, brownian_noise=brownian_noise,
                                                  y0=y0, mp=mp, varimax=varimax, da=false, inflation=inflation,
                                                  check_bounds=check_bounds)

    mp = argmin(run_ens_forecast.optimal_ens(info)[1])[1]
end

Random.seed!(1234)

info, ssa_info = run_ens_forecast.ens_forecast_compare(model=model, model_err=model_err,
                                              M=M, D=D, k=k, k_r=k_r, modes=modes,
                                              osc_vars=osc_vars,
                                              integrator=integrator,
                                              outfreq=outfreq, Δt=Δt,
                                              m=m, cycles=cycles, window=window,
                                              record_length=record_length,
                                              ens_err_pct=ens_err_pct, obs_err_pct=obs_err_pct,
                                              transient=transient, brownian_noise=brownian_noise,
                                              y0=y0, mp=mp, varimax=varimax, da=da, inflation=inflation,
                                              check_bounds=check_bounds)

serialize(open(string("out_colpitts_", ARGS[1]), "w"), info)
